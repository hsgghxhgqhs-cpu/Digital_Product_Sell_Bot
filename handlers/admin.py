from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes
from config import OWNER_ID, ADMIN_IDS
from database import SessionLocal
from models.user import UserRole, get_or_create_user

def is_admin(user_id: int) -> bool:
    return user_id == OWNER_ID or user_id in ADMIN_IDS

async def admin_panel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """ржЕрзНржпрж╛ржбржорж┐ржи ржкрзНржпрж╛ржирзЗрж▓"""
    user_id = update.effective_user.id
    if not is_admin(user_id):
        await update.message.reply_text("тЭМ ржЖржкржирж╛рж░ ржЕржирзБржорждрж┐ ржирзЗржЗред")
        return

    text = (
        "ЁЯЫа ржЕрзНржпрж╛ржбржорж┐ржи ржкрзНржпрж╛ржирзЗрж▓\n\n"
        "/add_product - ржирждрзБржи ржкржгрзНржп ржпрзЛржЧ ржХрж░рзБржи\n"
        "/set_stock - ржкржгрзНржпрзЗ рж╕рзНржЯржХ ржпрзЛржЧ ржХрж░рзБржи\n"
    )
    await update.message.reply_text(text)

def register_admin_handlers(app: Application):
    app.add_handler(CommandHandler("admin", admin_panel))